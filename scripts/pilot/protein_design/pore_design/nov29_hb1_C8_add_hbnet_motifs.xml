<ROSETTASCRIPTS>
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://www.w3schools.com 0911_Scott_NewBuns.xsd">

  11-7: restricted hbnet, renamed outer score function, loosened sasa cutoff
  11-29: Edits for HB_1

  <SCOREFXNS>
    <ScoreFunction name="beta_symm" weights="beta" symmetric="1"/>
  </SCOREFXNS>

  <TASKOPERATIONS>
    //legacy interface detection code that does not work with ResidueSelectors. See RESIDUE_SELECTORS section.
    <BuildingBlockInterface name="bbi" nsub_bblock="1" fa_rep_cut="3.0" contact_dist="8.5" bblock_dist="2.5"/>
    //detects residues between building blocks #note single component notation!! Also in this case using smaller than default values
    <SelectBySASA name="bb_surf" mode="sc" state="monomer" core_asa="0" surface_asa="0" core="0" boundary="1" surface="1" verbose="0"/>
    //selects surface and boundary residues of BUILDING BLOCK
  </TASKOPERATIONS>

  <RESIDUE_SELECTORS>
    #features
    <Index name="native_net" resnums="141,13,64,140,89,65"/>
    <SecondaryStructure name="loops" overlap="2" include_terminal_loops="true" ss="L"/>

    #interface selection
    <Task name="bbi_selector" designable="true" task_operations="bbi"/>
    <Task name="bb_surf_selector" designable="true" task_operations="bb_surf"/>
    <And name="interface_all" selectors="bbi_selector,bb_surf_selector"/>
    <Or name="interface_all_wnative" selectors="interface_all,native_net"/>
    <Not name="not_interface" selector="interface_all_wnative"/>
    //redefine not_interface, make native network non-designable?

    #side-chain-neighbors and interface subsets
    <Layer name="surf_bound" select_boundary="true" select_surface="true" core_cutoff="3.6"/>
    <Layer name="core" select_core="true" core_cutoff="3.6"/>
    <Layer name="core_bound" select_core="true" select_boundary="true" core_cutoff="3.6"/>
    <Layer name="bound" select_boundary="true" core_cutoff="3.6"/>
    <Layer name="surf" select_surface="true" core_cutoff="3.6"/>
    <And name="interface_core" selectors="core,interface_all_wnative"/>
    <And name="interface_boundary" selectors="bound,interface_all_wnative"/>
    <And name="interface_surface" selectors="surf,interface_all_wnative"/>
    <And name="interface_core_boundary" selectors="core_bound,interface_all_wnative"/> // use this for hbnet C6_HB1 design
    <And name="interface_surface_boundary" selectors="surf_bound,interface_all_wnative"/>
  </RESIDUE_SELECTORS>

  <TASKOPERATIONS>
    #polyA_interface
    <OperateOnResidueSubset name="design_interface_all_A" selector="interface_core_boundary">
      <RestrictAbsentCanonicalAASRLT aas="A"/>
    </OperateOnResidueSubset>

    #hbnet mover // C6_hb_1 : design the core_boundary of interface, leave the surface alone.
    <OperateOnResidueSubset name="design_int_hbnet_core_bound" selector="interface_core_boundary">
      <RestrictAbsentCanonicalAASRLT aas="HSTYNQ"/>
    </OperateOnResidueSubset>
    //no charged
    <!-- <OperateOnResidueSubset name="design_int_hbnet_boundary" selector="interface_boundary">
      <RestrictAbsentCanonicalAASRLT aas="TRKHYWNQDE"/>
  </OperateOnResidueSubset> -->

    <!-- <OperateOnResidueSubset name="repack_native_net" selector="native_net">
      <RestrictToRepackingRLT/>
    </OperateOnResidueSubset> -->
    //lock_interface_surface
    <OperateOnResidueSubset name="sbtrkt_interface_hbnet_surface" selector="interface_surface">
        <PreventRepackingRLT/>
    </OperateOnResidueSubset>




    #lock features
    <OperateOnResidueSubset name="lock_not_interface" selector="not_interface">
      <PreventRepackingRLT/>
    </OperateOnResidueSubset>
    <OperateOnResidueSubset name="lock_native_net" selector="native_net">
      <PreventRepackingRLT/>
    </OperateOnResidueSubset>
    <OperateOnResidueSubset name="lock_loops" selector="loops">
      <PreventRepackingRLT/>
    </OperateOnResidueSubset>
    <!-- <OperateOnResidueSubset name="lock_not_hbnet_core" selector="interface_core">
      <PreventRepackingRLT/>
    </OperateOnResidueSubset> -->
    //lock_not_hbnet_core, for resfile

    #General design Ops
    <IncludeCurrent name="IC"/>
    //includes input pdb's rotamers
    <LimitAromaChi2 name="limitaro" chi2max="110" chi2min="70"/>
    //disallow extreme aromatic rotamers
    <ExtraRotamersGeneric name="extra_chi" ex1="1" ex2="1" ex3="0" ex4="0" ex1aro="1" ex2aro="1" ex1aro_exposed="0" ex2aro_exposed="0" ex1_sample_level="1" ex2_sample_level="1" ex1aro_sample_level="1" ex2aro_sample_level="1" extrachi_cutoff="18"/>
    //use ex1 ex2 rotamers

  </TASKOPERATIONS>

  <FILTERS>

    #Eyes in the log
    <!-- <SaveResfileToDisk name="resfile_interface_all" task_operations="lock_not_interface,design_interface_all" designable_only="0" resfile_prefix="interface_all" resfile_suffix="a" resfile_general_property="NATRO"/>
    <SaveResfileToDisk name="resfile_hbnet_interface" task_operations="design_int_hbnet_core,design_int_hbnet_surf,lock_not_interface,lock_native_net,lock_loops" designable_only="0" resfile_prefix="hbnet_interface" resfile_suffix="b" resfile_general_property="NATRO"/>
    <SaveResfileToDisk name="resfile_hbnet_core" task_operations="design_int_hbnet_core,lock_not_hbnet_core" designable_only="0" resfile_prefix="hbnet_core" resfile_suffix="c" resfile_general_property="NATRO"/> -->

    #clash check
    <ClashCheck name="clash_check" nsub_bblock="1" verbose="1" write2pdb="1" cutoff="3" confidence="1" />
  </FILTERS>

  <MOVERS>
    <Symmetrizer name="gen_docked_config" symm_file="%%symmfile%%" radial_disp_max="0.5" angle_max="2.0"/> // with perturbation

    <HBNetStapleInterface
      name="hbnet_intermolecular"
      scorefxn="beta_symm"
      hb_threshold="-0.6"
      min_connectivity="0.5"
      min_helices_contacted_by_network="3"
      min_core_res="2"
      min_network_size="3"
      min_intermolecular_hbonds="3"
      min_networks_per_pose="1"
      span_all_helices="0"
      secondary_search="0"
      max_networks_per_pose="4"
      combos="3"
      only_start_at_interface_pairs="true"
      use_aa_dependent_weights="true"
      design_residues="STHYWNQ"
      core_selector="core"
      task_operations="lock_native_net,design_int_hbnet_core_bound,sbtrkt_interface_hbnet_surface,lock_loops,lock_not_interface"
      minimize="true"
      verbose="1"
      show_task="1"
      write_network_pdbs="1"
      write_cst_files="1"
      output_poly_ala_background="false"
      max_unsat="5"
      no_heavy_unsats_allowed="1"
      max_replicates="1"
      max_replicates_before_branch="5"
      max_replicates_before_unsat_check="5"
      />

      <SymPackRotamersMover name="polyA_interface" scorefxn="beta_symm" task_operations="lock_native_net,lock_not_interface,design_interface_all_A,sbtrkt_interface_hbnet_surface,lock_loops"/>
      <DumpPdb name="dump_polyA" scorefxn="beta_symm" fname="%%dumf%%dump_polyA_interface_all.pdb" tag_time="true"/>
      //buncha dumps
      <DumpPdb name="input_pose" scorefxn="beta_symm" fname="%%dumf%%input_pose.pdb" tag_time="true"/>
      <DumpPdb name="cyclized_pose" scorefxn="beta_symm" fname="%%dumf%%cyclized_pose.pdb" tag_time="true"/>


      <MultiplePoseMover name="MPM" max_input_poses="15" >
          <ROSETTASCRIPTS>
          	Sinduja Marx Oct18
          	Interface design by res selection for better layer design
          	<SCOREFXNS>
              	<ScoreFunction name="beta" weights="beta" symmetric="1"/>
              	<ScoreFunction name="beta_cst" weights="beta_cst" symmetric="1"/>
              	<ScoreFunction name="beta_aa_comp" weights="beta_cst" symmetric="1">
              		<Reweight scoretype="aa_composition" weight="1.0"/>
              	</ScoreFunction>

              	#for minimizer
              	<ScoreFunction name="sfx_symm_hard_cst" weights="beta" symmetric="1">
              		<Reweight scoretype="aa_composition" weight="1.0" />
              		<Reweight scoretype="coordinate_constraint" weight="1.0" />
              	</ScoreFunction>

              	#for surface
              	<ScoreFunction name="sfx_symm_elec_cst" weights="beta" symmetric="1">
              		<Reweight scoretype="aa_composition" weight="1.0" />
              		<Reweight scoretype="fa_elec" weight="1.4" />
              		<Reweight scoretype="hbond_sc" weight="2.0" />
              	</ScoreFunction>

              	#for motifs a soft score fxn
              	<ScoreFunction name="sfx_symm_norep_cst" weights="beta" symmetric="1">
              		<Reweight scoretype="fa_rep" weight="0.05"/>
              		<Reweight scoretype="aa_composition" weight="1.0"/>
              	</ScoreFunction>
          	</SCOREFXNS>

          	<TASKOPERATIONS>
          		//legacy interface detection code that does not work with ResidueSelectors. See RESIDUE_SELECTORS section.
          	    <BuildingBlockInterface name="bbi" nsub_bblock="1" fa_rep_cut="3.0" contact_dist="8.5" bblock_dist="2.5"/>
          	    //detects residues between building blocks #note single component notation!! Also in this case using smaller than default values
          	    <SelectBySASA name="bb_surf" mode="sc" state="monomer" core_asa="0" surface_asa="0" core="0" boundary="1" surface="1" verbose="0"/>
          	    //selects surface and boundary residues of BUILDING BLOCK
          	</TASKOPERATIONS>
          	<RESIDUE_SELECTORS>

          		#features
          	    <Index name="native_net" resnums="9,12,75,94,97,160,179,182,245,27,30,57,112,115,142,197,200,227"/>
          	    <SecondaryStructure name="loops" overlap="2" include_terminal_loops="true" ss="L"/>
          		<ResiduePDBInfoHasLabel name="hbnet_residues" property="HBNet" />

                #interface selection
                <Task name="bbi_selector" designable="true" task_operations="bbi"/>
                <Task name="bb_surf_selector" designable="true" task_operations="bb_surf"/>
                <And name="interface_all" selectors="bbi_selector,bb_surf_selector"/>
                <Or name="interface_all_wnative" selectors="interface_all,native_net"/>
                <Not name="not_interface" selector="interface_all_wnative"/>
                //redefine not_interface, make native network non-designable?

                #side-chain-neighbors and interface subsets
                <Layer name="surf_bound" select_boundary="true" select_surface="true" core_cutoff="3.6"/>
                <Layer name="core" select_core="true" core_cutoff="3.6"/>
                <Layer name="core_bound" select_core="true" select_boundary="true" core_cutoff="3.6"/>
                <Layer name="bound" select_boundary="true" core_cutoff="3.6"/>
                <Layer name="surf" select_surface="true" core_cutoff="3.6"/>
                <And name="interface_core" selectors="core,interface_all_wnative"/>
                <And name="interface_boundary" selectors="bound,interface_all_wnative"/>
                <And name="interface_surface" selectors="surf,interface_all_wnative"/>
                <And name="interface_core_boundary" selectors="core_bound,interface_all_wnative"/> // use this for hbnet C6_HB1 design
                <And name="interface_surface_boundary" selectors="surf_bound,interface_all_wnative"/>


          		#for core_around_hbnet
          		<Neighborhood name="around_hbnet" selector="hbnet_residues" distance="5.0" />
          		<Layer name="hbnet_core" select_core="true" core_cutoff="3.6" />
          		<And name="core_around_hbnet" selectors="hbnet_core,around_hbnet"/>
          	</RESIDUE_SELECTORS>
          	<TASKOPERATIONS>

          		##general design ops
          		<IncludeCurrent name="IC"/>  ##includes input pdb's rotamers
          		<LimitAromaChi2 name="limitaro" chi2max="110" chi2min="70" /> ##disallow extreme aromatic rotamers
          		<ExtraRotamersGeneric name="extra_chi" ex1="1" ex2="1" ex3="0" ex4="0" ex1aro="1" ex2aro="1" ex1aro_exposed="0" ex2aro_exposed="0" ex1_sample_level="1" ex2_sample_level="1" ex1aro_sample_level="1" ex2aro_sample_level="1" extrachi_cutoff="18"/> ##use ex1 ex2 rotamers
          		<!-- <RestrictToRepacking name="repack_only" />						##for minimize/repack -->
          		<ConsensusLoopDesign name="disallow_nonnative_loop_sequences" include_adjacent_residues="1" enrichment_threshold="0.3" use_dssp="1" />


                    #full interface
                    <OperateOnResidueSubset name="design_interface_all" selector="interface_all">
                      <RestrictAbsentCanonicalAASRLT aas="AWYHDENQKRSTILVMF"/>
                    </OperateOnResidueSubset>

          			#lock features
          			<OperateOnResidueSubset name="lock_not_interface" selector="not_interface">
          			  <PreventRepackingRLT/>
          			</OperateOnResidueSubset>
          			//redundant
          			<OperateOnResidueSubset name="lock_native_net" selector="native_net">
          			  <PreventRepackingRLT/>
          			</OperateOnResidueSubset>
          			<OperateOnResidueSubset name="lock_loops" selector="loops">
          			  <PreventRepackingRLT/>
          			</OperateOnResidueSubset>
          			<OperateOnResidueSubset name="lock_hbnet" selector="hbnet_residues">
          			  <PreventRepackingRLT/>
          			</OperateOnResidueSubset>

          			<OperateOnResidueSubset name="design_interface_all_A" selector="interface_all">
          		      <RestrictAbsentCanonicalAASRLT aas="A"/>
          		    </OperateOnResidueSubset>

          			  #for motif placer interface core and boundary
          			<OperateOnResidueSubset name="sbtrkt_interface_surface" selector="interface_surface" >
                          <PreventRepackingRLT/>
                      </OperateOnResidueSubset>
                    <OperateOnResidueSubset name="design_interface_core_bound" selector="interface_core_boundary">
                        <RestrictAbsentCanonicalAASRLT aas="AILMV"/>
                    </OperateOnResidueSubset>

                    boundary and surface operation
                    // for interface boundary
                    <OperateOnResidueSubset name="design_interface_boundary" selector="interface_boundary">
                        <RestrictAbsentCanonicalAASRLT aas="AILMVSTF"/>
                    </OperateOnResidueSubset>
          			// design surface of interface
          		    <OperateOnResidueSubset name="design_interface_surface" selector="interface_surface" >
          		   	 <RestrictAbsentCanonicalAASRLT aas="DENQRST" /> ## disallow:K
          		    </OperateOnResidueSubset>
                    //core allowed to repack
          		    <OperateOnResidueSubset name="repack_interface_core" selector="interface_core" >
          		   	 <RestrictToRepackingRLT/>
          		    </OperateOnResidueSubset>

                    //post minimization
                    <RestrictToRepacking name="repack_only" />



          	</TASKOPERATIONS>
          	<FILTERS>
          		//weed out by score, sc, sasa, ddg
          		<ScoreType name="score_filt" scorefxn="beta_cst" score_type="total_score" threshold="0.0" confidence="1"/>
          		<ShapeComplementarity name="sc_filt" multicomp="0" verbose="1" min_sc="0.5" jump="1" write_int_area="1" confidence="0"/>
          		<Sasa name="sasa_int_area_filt" threshold="700" upper_threshold="5000" hydrophobic="0" polar="0" jump="1" confidence="0"/>
          		<Ddg name="ddG_filt" scorefxn="beta" jump="1" repack="0" repeats="1" threshold="0" confidence="0"/>


          		//From Scott for hbnet designs
          		//score function note: regular beta score function
          		#hbnet new_buns
          		<BuriedUnsatHbonds3 name="new_buns_HBNet" scorefxn="beta" cutoff="20" print_out_info_to_pdb="true" ignore_surface_res="true" residue_surface_cutoff="20.0" ignore_bb_heavy_unsats="true" residue_selector="hbnet_residues" confidence="1"/>
          		new_buns_sc_heavy
          		<BuriedUnsatHbonds3
          		    name="new_buns_sc_heavy"
          		    scorefxn="beta"
          		    cutoff="3"
          		    use_reporter_behavior="true"
          		    report_sc_heavy_atom_unsats="true"
          		    print_out_info_to_pdb="true"
          		    ignore_surface_res="true"
          		    residue_surface_cutoff="20.0"
          		    ignore_bb_heavy_unsats="false"
          		    confidence="1"/>
          		new_buns_bb_heavy, in the case where you aren't designing loops, unlikely to have bb heavy
          		<BuriedUnsatHbonds3
          		    name="new_buns_bb_heavy"
          		    scorefxn="beta"
          		    cutoff="2"
          		    use_reporter_behavior="true"
          		    report_bb_heavy_atom_unsats="true"
          		    print_out_info_to_pdb="true"
          		    ignore_surface_res="true"
          		    residue_surface_cutoff="20.0"
          		    ignore_bb_heavy_unsats="false"
          		    confidence="0"/>
          		network_holes: holes score for only around your network. Should be less than -1.0.
          		<Holes name="network_holes" threshold="1.0" residue_selector="core_around_hbnet" normalize_per_atom="true" exclude_bb_atoms="true" confidence="0"/>
          		ss_sc
          		<!-- <SSShapeComplementarity name="ss_sc" verbose="0" loops="0" helices="1" confidence="1" min_sc="0.65"/> -->// recom cutoff 0.7

          		//compare to symunsathbonds filter
          		Maximum number of buried unsatisfied H-bonds allowed across an interface.
          		<SymUnsatHbonds name="unsat_pols" jump="1" cutoff="5" verbose="1" write2pdb="1" confidence="0"/>

          		//Report on residue composition
          		<ExposedHydrophobics name="exposedhydrop" sasa_cutoff="20" threshold="0" confidence="0"/>
          		<ResidueCount name="ala_count" residue_types="ALA" confidence="0"/>

          		//Report on the changed residues
          		<SequenceRecovery name="mutations" rate_threshold="0.0" mutation_threshold="50" report_mutations="1" verbose="1" write2pdb="1" task_operations="design_interface_all" confidence="0"/>
          		//is it enough to use input native pdb as monomer or do we need the multimer.

          		//Report on secondary structure
          		<SSPrediction name="psipred_conf" confidence="0" cmd="/work/brunette/src/psipred3.21/runpsipred_single" use_probability="1" mismatch_probability="1" use_svm="0" threshold="0.35"/>

          		//Report on voids
          		<Holes name="holes" confidence="0" threshold="2.0"/>


          		//score per residue
          		<ResidueCount name="nres" confidence="0"/>
          		<ScoreType name="total_score" scorefxn="beta" score_type="total_score" threshold="0"/>
          		<CalculatorFilter name="score_norm" confidence="0" equation="SCORE/NRES" threshold="3">
          		    <Var name="SCORE" filter_name="total_score"/>
          		    <Var name="NRES" filter_name="nres"/>
          		</CalculatorFilter>

                //hbnet cst score
                <EnzScore name="hbnet_cst_sc" score_type="cstE" scorefxn="beta" whole_pose="1" energy_cutoff="20" confidence="0" />

                <!-- <InterfaceBindingEnergyDensityFilter name="ddG_sasa" sasa_filter="sasa_int_area_filt"  ddG_filter="ddG_filt" threshold="-0.010" confidence="0" /> -->
                <ResInInterface name="no_interf_res" residues="20" jump_number="1" confidence="0"/>

                //Save resfile of hbnet residues
                <SaveResfileToDisk name="hbnet_resfile" task_operations="lock_hbnet" designable_only="0" resfile_prefix="hbn_" resfile_general_property="NATRO" selected_resis_property="PIKAA"/>


          	</FILTERS>
          	<MOVERS>
                <ClearConstraintsMover name="clearAllConstraints" />
          		<AddCompositionConstraintMover name="surface_comp_sasa" filename="%%surface%%" selector="interface_surface_boundary" />
          		<AddCompositionConstraintMover name="MET_comp_sasa" filename="%%ALA_MET%%" selector="interface_core" />
          		<!-- <AddConstraintsToCurrentConformationMover name="constrainCA" cst_weight="1.0" use_distance_cst="False" coord_dev="1.0" bound_width="0.5" CA_only="True" bb_only="False"/> -->
          		<AddConstraintsToCurrentConformationMover name="add_cst" use_distance_cst="0" coord_dev="2.0" CA_only="true"/>

          		#Packers
                // soft design core+bdry
          		<SchemePlaceMotifs name="place_motifs" mode="symmetric_interface" allowed_aas="motifs" task_operations="design_interface_core_bound,sbtrkt_interface_surface,lock_not_interface,lock_loops,lock_hbnet,lock_native_net,IC,limitaro,extra_chi" scorefxn="sfx_symm_norep_cst" motif_sets="xs_bb_ss_AILMV_max_std.rpm.bin.gz"/> // still using mets. controlling using composition mover.
          		// hard design bdry+surf
          		<SymPackRotamersMover name="design_surf" scorefxn="sfx_symm_elec_cst" task_operations="design_interface_boundary,design_interface_surface,repack_interface_core,lock_not_interface,lock_loops,lock_hbnet,lock_native_net,IC,limitaro,extra_chi"/>
                // Repack only
                <SymPackRotamersMover name="repack_interface" scorefxn="beta" task_operations="design_interface_all,lock_not_interface,repack_only,IC,limitaro,extra_chi" />

                #Minimizers
                // hard min
          		<TaskAwareSymMinMover name="min" scorefxn="beta" bb="0" chi="1" rb="1" task_operations="design_interface_all,lock_not_interface,IC,extra_chi"/>
                // hard min with cst (should you add distance cst here?)
                <TaskAwareSymMinMover name="min_cst" scorefxn="sfx_symm_hard_cst" bb="0" chi="1" rb="1" task_operations="design_interface_all,lock_hbnet,lock_not_interface,IC,extra_chi"/>

                #dump
          		<DumpPdb name="dump_before_buns" fname="%%dumf%%dump_before_buns.pdb" scorefxn="beta_aa_comp" tag_time="1"/>
          		#test hb-network integrity: cart min all+repack

          		#interface analyzer
          		<InterfaceAnalyzerMover name="interface_analyzer" scorefxn="beta_cst" pack_separated="true" pack_input="false" packstat="true" interface_sc="true" use_jobname="true" jump="1" />

                //buncha dumps
                inside_mpm
                motifs_placed
                motifs_placed_and_minimized
                suface_designed
                suface_designed_and_minimized
                <DumpPdb name="inside_mpm" scorefxn="beta_cst" fname="%%dumf%%dump_polyA_interface_all.pdb" tag_time="true"/>
                <DumpPdb name="motifs_placed" scorefxn="beta_cst" fname="%%dumf%%motifs_placed.pdb" tag_time="true"/>
                <DumpPdb name="motifs_placed_and_minimized" scorefxn="beta_cst" fname="%%dumf%%motifs_placed_and_minimized.pdb" tag_time="true"/>
                <DumpPdb name="surface_designed" scorefxn="beta_cst" fname="%%dumf%%surface_designed.pdb" tag_time="true"/>
                <DumpPdb name="surface_designed_and_minimized" scorefxn="beta_cst" fname="%%dumf%%surface_designed_and_minimized.pdb" tag_time="true"/>
                <DumpPdb name="dump_before_operation_nocst" scorefxn="beta_cst" fname="%%dumf%%constraints_just_off.pdb" tag_time="true"/>

          	</MOVERS>

          	<PROTOCOLS>
                <!-- <Add filter="hbnet_resfile"/> -->
          		<Add mover_name="add_cst"/> 					// double check that turning on coordinate constraint mover ,, dependencies on coordinate cst score fxn
          		<Add mover_name="surface_comp_sasa"/>				// same for aa comp
          		<Add mover_name="MET_comp_sasa"/>
                <!-- <Add mover_name="inside_mpm"/> -->
          		#soft place motifs: interface_core, interface_boundary
          		<Add mover_name="place_motifs"/>
                <!-- <Add mover_name="motifs_placed"/> -->

          		#hard minimize bb=0 rb=1 sc=1 interface_all, lock the rest
                #with constraints
          		<Add mover_name="min_cst"/>
                <!-- <Add mover_name="motifs_placed_and_minimized"/> -->

          		#hard design surface: interface_surface
          		<Add mover_name="design_surf"/>
                <!-- <Add mover_name="surface_designed"/> -->

          		#hard minimize bb=0 rb=1 sc=1 interface_all
          		<Add mover_name="min_cst"/>
                <!-- <Add mover_name="surface_designed_and_minimized"/> -->

          		#dump
          		#test hb-network integrity: cart min all+repack


          		#clear all csts
          		<Add mover_name="clearAllConstraints"/> (does this affect output score?)
                <Add mover_name="dump_before_operation_nocst" />
                #min + repack

                <Add mover_name="min"/>
                <Add mover_name="repack_interface"/>

                #filters
          		#dump before buns.
          		<Add mover_name="dump_before_buns"/>

          		#weeder
          		score_filt
          		sc_filt
          		sasa_int_area_filt
          		ddG_filt
          		<Add filter="score_filt"/>
          		<Add filter="sc_filt"/>
          		<Add filter="sasa_int_area_filt"/>
          		<Add filter="ddG_filt"/>
                <!-- <Add filter="ddG_sasa"/> -->
          		#hbnet stuff
          		<Add filter="new_buns_HBNet"/>
          		<Add filter="new_buns_sc_heavy"/>
          		<Add filter="new_buns_bb_heavy"/>
          		<Add filter="network_holes"/>
                <Add filter="hbnet_cst_sc"/>
          		#symunsts
          		<Add filter="unsat_pols"/>
          		#aa compositions
          		<Add filter="ala_count"/>
          		<Add filter="exposedhydrop"/>
          		#mutations
          		<Add filter="mutations"/>
          		#interface only
                <Add filter="no_interf_res"/>
          		<Add mover="interface_analyzer"/>
          		#stats
          		<Add filter_name="psipred_conf"/>
          		<Add filter_name="holes"/>
          		<Add filter_name="score_norm"/>
          	</PROTOCOLS>

          </ROSETTASCRIPTS>

      </MultiplePoseMover>

  </MOVERS>

  <PROTOCOLS>


    //generate docked configuration without perturbation
    //clash check
    //poly A interface - don't need for prescouted poses which already have polyA!
    //hbnet
    //MPM
    <Add mover_name="input_pose"/>
    <Add mover_name="gen_docked_config"/>
    <!-- <Add mover_name="cyclized_pose"/> -->
    <Add filter_name="clash_check" />
    <Add mover ="polyA_interface"/>
    <Add mover_name="hbnet_intermolecular"/>
    <Add mover ="MPM"/>

  </PROTOCOLS>

</ROSETTASCRIPTS>
